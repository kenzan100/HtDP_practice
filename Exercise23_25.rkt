#lang racket
(define ticket-base-price 5.0)
(define attendees-base 120)
(define (attendees ticket-price)
  (define (ticket-price-diff)(- ticket-price ticket-base-price))
  (- attendees-base (* (ticket-price-diff) (/ 15 0.1))))
(define (revenue ticket-price)
  (* ticket-price (attendees ticket-price)))
(define (cost ticket-price)
  (+ 180 (* 0.04 (attendees ticket-price))))
(define (cost2 ticket-price)
  (* 1.5 (attendees ticket-price)))
(define (profit ticket-price)
  (- (revenue ticket-price)
     (cost ticket-price)))
(define (profit2 ticket-price)
  (- (revenue ticket-price)
     (cost2 ticket-price)))

(define map
  (lambda (fn list)
    (if (empty? list) '()
        (cons (fn (car list))
              (map fn (cdr list))))))
(map profit '(3 4 5))
(map profit2 '(3 4 5))